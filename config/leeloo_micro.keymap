/*
 * Copyright (c) 2024 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// Layers
#define QW_M    0       // Main
#define QW_L    1       // Lower
#define QW_R    2       // Raise
#define QW_A    3       // Adjust

#define QX_M    4       // Main
#define QX_L    5       // Lower
#define QX_R    6       // Raise
#define QX_A    7       // Adjust

#define QC_N    8       // Number Pad
#define QC_F    9       // Firmware


// Short versions
#define WIN_SC      LG(LS(S))
#define OSX_SC      LG(LS(N4))

#define enDSH_X     LA(MINUS)
#define emDSH_X     LS(LA(MINUS))

#define BT0         BT_SEL 0
#define BT1         BT_SEL 1
#define BT2         BT_SEL 2
#define BT3         BT_SEL 3
#define BT4         BT_SEL 4

#define BOOTLDR     &bootloader

#define VOLUP   C_VOL_UP
#define VOLDN   C_VOL_DN
#define VOLMT   C_MUTE

#define RGBON   &rgb_ug RGB_ON
#define RGBOFF  &rgb_ug RGB_OFF
#define RGBTOG  &rgb_ug RGB_TOG
#define RGBHUI  &rgb_ug RGB_HUI
#define RGBHUD  &rgb_ug RGB_HUD
#define RGBSAI  &rgb_ug RGB_SAI
#define RGBSAD  &rgb_ug RGB_SAD
#define RGBBRI  &rgb_ug RGB_BRI
#define RGBBRD  &rgb_ug RGB_BRD
#define RGBEFF  &rgb_ug RGB_EFF


/*
 * Assign the cs-gpios pin to 4.
 * Uncomment these next few lines if implementing nice!view Displays
 */
nice_view_spi: &spi0 {
    cs-gpios = <&pro_micro 4 GPIO_ACTIVE_HIGH>;
};


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_win_layer {
            if-layers = <QW_L QW_R>;
            then-layer = <QW_A>;
        };
        
        adjust_osx_layer {
            if-layers = <QX_L QX_R>;
            then-layer = <QX_A>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_win_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <QW_M>;
            bindings = <&kp ESC>;
        };

        combo_osx_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <QX_M>;
            bindings = <&kp ESC>;
        };

        combo_osx_lock {
            timeout-ms = <50>;
            key-positions = <26 18>;
            layers = <QX_M>;
            bindings = <&kp LC(LG(Q))>;
        };
    };

    macros {
        enDSH_W: en_Dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N0>
                , <&macro_release &kp LALT>
                ;
        };

        emDSH_W: em_Dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N1>
                , <&macro_release &kp LALT>
                ;
        };
    };

    behaviors {
        tdw_Q: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp LA(F4)>;
        };

        tdx_Q: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp LG(Q)>;
        };

        tdw_LRP: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        tdx_LRB: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        tdx_LRR: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        tdx_LRA: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };

        tdx_BOL: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LG(LEFT)>, <&kp HOME>;
        };

        tdx_EOL: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LG(RIGHT)>, <&kp END>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_win_layer {
            display-name = " Win 11";
            bindings = <
&kp Q     &kp W      &kp E      &kp R      &kp T                            &kp Y      &kp U      &kp I      &kp O      &kp P
&kp A      &kp S      &kp D      &kp F      &kp G                            &kp H      &kp J      &kp K      &kp L      &kp SEMI
&mt LSHFT Z &kp X      &kp C      &kp V      &kp B     &kp TAB    &kp RET   &kp N      &kp M      &kp COMMA  &kp DOT    &mt RSHFT FSLH
                  &lt 2 ESC   &kp LALT  &lt 1 DEL  &mt LCTRL SPACE    &kp SPACE  &kp BSPC  &kp EQUAL   &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp UP DOWN>;
        };

        lower_win_layer {
            display-name = " Lower";
            bindings = <
&mt P N1     &mt O N2     &mt I N3     &mt U N4     &mt Y N5                           &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
&kp TAB   &kp L   &kp K   &kp J   &kp H                           &kp BSLH     &kp MINUS     &kp SQT     &kp UP     &kp RSHFT
&kp LSHFT  &kp DOT     &kp COMMA     &kp M     &kp N     &kp CAPS     &trans           &kp LBKT   &kp RBKT   &kp LEFT     &kp DOWN     &kp RIGHT
                      &tog 4     &kp GRAVE     &trans     &kp SPACE     &kp SPACE     &kp BSPC     &kp EQUAL     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LEFT RIGHT>;
        };

        raise_win_layer {
            display-name = " Raise";
            bindings = <
&kp F1    &kp F2     &kp F3     &kp F4 &kp PSCRN                           &kp INS  &kp HOME   &kp PG_UP     &trans    &trans
&kp F5   &kp F6     &kp F7     &kp F8     &kp SLCK                           &kp DEL  &kp END   &kp PG_DN   &kp UP  &trans
&kp F9     &kp F10     &kp F11     &kp F12     &kp PAUSE_BREAK     
&trans
     &rgb_ug RGB_TOG     &trans     &trans     &kp LEFT     &kp DOWN     &kp RIGHT
                      &trans     &kp LGUI     &tog 4     &kp SPACE     &kp SPACE     &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_win_layer {
            display-name = " Adjust";
            bindings = <
&kp TAB     &kp Q     &kp W     &kp E     &kp R                           &trans     &trans     &kp VOLUP  &trans     &trans
&kp LCTRL     &kp A     &kp S     &kp D     &kp F                          &trans     &trans     &kp VOLDN  &trans     &trans
&kp LSHFT    &kp Z    &kp X     &kp C     &kp V     &kp G     &trans     &trans     &trans  &trans     &trans     &trans
                      &kp ESC     &kp LALT     &kp B     &kp SPACE     &trans     &trans     &trans     &to 1
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        default_osx_layer {
            display-name = " OSX";
            bindings = <
&kp TAB     &kp Q     &kp W     &kp E     &mt T R                           &kp Y     &kp U     &kp I  &kp O     &kp P
&kp LCTRL     &kp A     &kp S     &kp D     &kp F                          &kp H     &kp J     &kp K  &kp L     &kp SEMI
&kp LSHFT    &kp Z    &kp X     &kp C     &kp V     &kp G     &kp RET     &kp N     &kp M  &kp COMMA     &kp DOT     &mt RSHFT FSLH
                      &kp ESC     &kp LALT     &sl 5     &kp SPACE     &kp SPACE     &kp BSPC     &trans     &tog 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp UP DOWN>;
        };

        lower_osx_layer {
            display-name = " Lower";
            bindings = <
&mt P ESC     &mt O N1     &mt I N2     &mt U N3     &mt Y N4                           &trans      &trans      &trans     &trans     &trans
&kp LCTRL   &kp L   &kp K   &kp J   &kp H                            &kp BSLH       &kp MINUS       &kp SQT      &kp UP      &trans
&kp LSHFT  &kp DOT      &kp COMMA      &kp M      &kp N      &trans     &kp RET     &trans &trans &kp LEFT      &kp DOWN      &kp RIGHT
                      &sl 6     &kp T     &kp B     &kp SPACE     &kp SPACE     &kp BSPC      &trans      &tog 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LEFT RIGHT>;
        };

        raise_osx_layer {
            display-name = " Raise";
            bindings = <
&kp F1    &kp F2      &kp F3      &none &none                            &none  &none   &none     &none   &none
&kp F4   &kp F5      &kp F6      &none      &none                            &none  &none   &none   &none  &none
&kp F7     &kp F8      &kp F9      &none      &none      &none     &kp RET     &none      &none      &none      &none      &none
                      &kp F10     &kp F11     &kp F12     &kp SPACE     &kp SPACE     &none     &none    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_osx_layer {
            display-name = " Adjust";
            bindings = <
&kp F1     &kp F2     &kp F3     &kp F4     &kp F5                           &none      &none      &kp VOLUP  &none      &none
&kp F6     &kp F7     &kp F8     &kp F9     &kp F10                          &none      &none      &kp VOLDN  &none      &none
&kp F11    &kp F12    &none      &none      &none      &trans     &trans     &none      &kp VOLMT  &none      &none      &trans
                      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &tog QX_M
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        numpad_layer {
            display-name = " NPad";
            bindings = <
&none      &none      &none      &none      &none                            &kp SLASH  &kp N7     &kp N8     &kp N9     &kp MINUS
RGBON      RGBTOG     RGBHUI     RGBSAI     RGBBRI                           &kp ASTRK  &kp N4     &kp N5     &kp N6     &kp PLUS 
RGBOFF     RGBEFF     RGBHUD     RGBSAD     RGBBRD     &trans     &trans     &none      &kp N1     &kp N2     &kp N3     &kp EQUAL
                      &trans     &trans     &trans     &trans     &trans     &kp N0     &kp DOT    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        ble_layer {
            display-name = " BLE";
            bindings = <
&bt BT0    &bt BT1    &bt BT2    &bt BT3    &bt BT4                          &bt BT0    &bt BT1    &bt BT2    &bt BT3    &bt BT4
BOOTLDR    &sys_reset &none      &none      &none                            &none      &none      &none      &sys_reset BOOTLDR
&trans     &none      &none      &none      &none      &trans     &trans     &none      &none      &none      &none      &trans
                      &trans     &bt BT_CLR &trans     &trans     &trans     &trans     &none      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

    };
};
